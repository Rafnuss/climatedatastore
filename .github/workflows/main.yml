# This is a basic workflow to help you get started with Actions

name: Climate Data CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    name: Test Climate Data Store
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo
        uses: actions/checkout@v3
      
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1

      # Runs all tests in the project.
      - name: Run tests
        uses: matlab-actions/run-command@v1
        with:
          command: addpath("buildutil"),testToolbox()     
          
      # Patch the Cobertura report to change NaNs to zeros
      - name: Fix up Test Results
        run: sed 's/NaN/0/g' report/codecoverage.xml > report/codecoverage_cleaned.xml
          
      # Publish code coverage results
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.2.0
        with:
          filename: report/codecoverage_cleaned.xml
          badge: true
          format: markdown
          output: both
      
      - name: Capture coverage summary
        id: get-codecoverage-markdown
        run: |
          cat code-coverage-results.md
          body = $(cat code-coverage-results.md)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}" 
          echo ::set-output name=body::$body

      - name: Create code coverage comment
        uses: peter-evans/commit-comment@v2
        with:
          body: ${{ steps.get-codecoverage-markdown.outputs.body }}        
          
      # Publish test results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "report/test-results.xml"
          
     # Save the contents of the report directory as an artifact
      - name: Save Report Directory
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: report
          path: report
